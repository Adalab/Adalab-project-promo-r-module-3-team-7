{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/B\\xE1rbara/Documents/proyects-code/projects/proyecto-Modulo3/Adalab-project-promo-r-module-3-team-7/src/components/GetAvatar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GetAvatar(props) {\n  const fr = new FileReader();\n  const myFileField = /*#__PURE__*/React.createRef();\n  const uploadImage = ev => {\n    console.log('La usuaria ha abierto la ventana para elegir ficheros');\n    console.log('La usuaria ha elegido los ficheros', ev.currentTarget.files);\n    console.log('El primero de los ficheros elegidos es', ev.currentTarget.files[0]);\n    if (ev.currentTarget.files.length > 0) {\n      const myFile = ev.currentTarget.files[0];\n      fr.addEventListener('load', getImage);\n      fr.readAsDataURL(myFile);\n    }\n  };\n  const getImage = () => {\n    const image = fr.result;\n    props.updateAvatar(image);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fillform__image\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"fillform__image--button\",\n      children: [\"A\\xF1adir imagen\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"photo\",\n        id: \"photo\",\n        ref: myFileField,\n        className: \"hidden\",\n        onChange: uploadImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fillform__image--square\",\n      style: {\n        backgroundImage: `url(${props.avatar})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = GetAvatar;\nGetAvatar.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  updateAvatar: PropTypes.func.isRequired\n};\nexport default GetAvatar;\nvar _c;\n$RefreshReg$(_c, \"GetAvatar\");","map":{"version":3,"names":["React","PropTypes","GetAvatar","props","fr","FileReader","myFileField","createRef","uploadImage","ev","console","log","currentTarget","files","length","myFile","addEventListener","getImage","readAsDataURL","image","result","updateAvatar","backgroundImage","avatar","propTypes","string","isRequired","func"],"sources":["/mnt/c/Users/Bárbara/Documents/proyects-code/projects/proyecto-Modulo3/Adalab-project-promo-r-module-3-team-7/src/components/GetAvatar.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction GetAvatar(props) {\r\n  const fr = new FileReader();\r\n  const myFileField = React.createRef();\r\n\r\n  const uploadImage = (ev) => {\r\n    console.log('La usuaria ha abierto la ventana para elegir ficheros');\r\n    console.log('La usuaria ha elegido los ficheros', ev.currentTarget.files);\r\n    console.log(\r\n      'El primero de los ficheros elegidos es',\r\n      ev.currentTarget.files[0]\r\n    );\r\n\r\n    if (ev.currentTarget.files.length > 0) {\r\n      const myFile = ev.currentTarget.files[0];\r\n      fr.addEventListener('load', getImage);\r\n      fr.readAsDataURL(myFile);\r\n    }\r\n  };\r\n\r\n  const getImage = () => {\r\n    const image = fr.result;\r\n    props.updateAvatar(image);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fillform__image\">\r\n      <label className=\"fillform__image--button\">\r\n        Añadir imagen\r\n        <input\r\n          type=\"file\"\r\n          name=\"photo\"\r\n          id=\"photo\"\r\n          ref={myFileField}\r\n          className=\"hidden\"\r\n          onChange={uploadImage}\r\n        />\r\n      </label>\r\n\r\n      <div\r\n        className=\"fillform__image--square\"\r\n        style={{ backgroundImage: `url(${props.avatar})` }}\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nGetAvatar.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  updateAvatar: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default GetAvatar;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC;AAEnC,SAASC,SAAS,CAACC,KAAK,EAAE;EACxB,MAAMC,EAAE,GAAG,IAAIC,UAAU,EAAE;EAC3B,MAAMC,WAAW,gBAAGN,KAAK,CAACO,SAAS,EAAE;EAErC,MAAMC,WAAW,GAAIC,EAAE,IAAK;IAC1BC,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC;IACpED,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,EAAE,CAACG,aAAa,CAACC,KAAK,CAAC;IACzEH,OAAO,CAACC,GAAG,CACT,wCAAwC,EACxCF,EAAE,CAACG,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC,CAC1B;IAED,IAAIJ,EAAE,CAACG,aAAa,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACrC,MAAMC,MAAM,GAAGN,EAAE,CAACG,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC;MACxCT,EAAE,CAACY,gBAAgB,CAAC,MAAM,EAAEC,QAAQ,CAAC;MACrCb,EAAE,CAACc,aAAa,CAACH,MAAM,CAAC;IAC1B;EACF,CAAC;EAED,MAAME,QAAQ,GAAG,MAAM;IACrB,MAAME,KAAK,GAAGf,EAAE,CAACgB,MAAM;IACvBjB,KAAK,CAACkB,YAAY,CAACF,KAAK,CAAC;EAC3B,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,iBAAiB;IAAA,wBAC9B;MAAO,SAAS,EAAC,yBAAyB;MAAA,4CAExC;QACE,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,OAAO;QACZ,EAAE,EAAC,OAAO;QACV,GAAG,EAAEb,WAAY;QACjB,SAAS,EAAC,QAAQ;QAClB,QAAQ,EAAEE;MAAY;QAAA;QAAA;QAAA;MAAA,QACtB;IAAA;MAAA;MAAA;MAAA;IAAA,QACI,eAER;MACE,SAAS,EAAC,yBAAyB;MACnC,KAAK,EAAE;QAAEc,eAAe,EAAG,OAAMnB,KAAK,CAACoB,MAAO;MAAG;IAAE;MAAA;MAAA;MAAA;IAAA,QAC9C;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,KA5CQrB,SAAS;AA8ClBA,SAAS,CAACsB,SAAS,GAAG;EACpBD,MAAM,EAAEtB,SAAS,CAACwB,MAAM,CAACC,UAAU;EACnCL,YAAY,EAAEpB,SAAS,CAAC0B,IAAI,CAACD;AAC/B,CAAC;AAED,eAAexB,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}