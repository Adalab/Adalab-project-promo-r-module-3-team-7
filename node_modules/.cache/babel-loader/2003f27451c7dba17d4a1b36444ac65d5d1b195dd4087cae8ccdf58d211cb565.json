{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/B\\xE1rbara/Documents/proyects-code/projects/proyecto-Modulo3/Adalab-project-promo-r-module-3-team-7/src/components/ImageReader.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageReader = props => {\n  _s();\n  const [fileSize, setFileSize] = useState(0);\n  const [fileType, setFileType] = useState(\"desconocida\");\n  const fileElement = useRef();\n  const fileReader = new FileReader();\n  const handleFile = () => {\n    const selectedFile = fileElement.current.files[0];\n    if (selectedFile) {\n      console.log(selectedFile);\n      setFileSize(selectedFile.size);\n      setFileType(selectedFile.type);\n      fileReader.readAsDataURL(selectedFile);\n    }\n  };\n  const getImage = () => {\n    props.handleImage(fileReader.result);\n  };\n  fileReader.addEventListener(\"load\", getImage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Selecciona una imagen por favor:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileElement,\n        type: \"file\",\n        name: \"image-reader\",\n        onChange: handleFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"El tama\\xF1o de la imagen es: \", fileSize, \" bytes.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"El tipo de la imagen es: \", fileType, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n_s(ImageReader, \"7ckuqQ4hgpiV6BOQjZGBYQyV18M=\");\n_c = ImageReader;\nexport default ImageReader;\nvar _c;\n$RefreshReg$(_c, \"ImageReader\");","map":{"version":3,"names":["useRef","useState","ImageReader","props","fileSize","setFileSize","fileType","setFileType","fileElement","fileReader","FileReader","handleFile","selectedFile","current","files","console","log","size","type","readAsDataURL","getImage","handleImage","result","addEventListener"],"sources":["/mnt/c/Users/Bárbara/Documents/proyects-code/projects/proyecto-Modulo3/Adalab-project-promo-r-module-3-team-7/src/components/ImageReader.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nconst ImageReader = (props) => {\r\n    const [fileSize, setFileSize] = useState(0);\r\n    const [fileType, setFileType] = useState(\"desconocida\");\r\n    \r\n    const fileElement = useRef();\r\n      \r\n    const fileReader = new FileReader();\r\n  \r\n    \r\n    const handleFile = () => {\r\n     \r\n      const selectedFile = fileElement.current.files[0];\r\n  \r\n      \r\n      if (selectedFile) {\r\n       \r\n        console.log(selectedFile);\r\n  \r\n        \r\n        setFileSize(selectedFile.size);\r\n        setFileType(selectedFile.type);\r\n  \r\n       \r\n        fileReader.readAsDataURL(selectedFile);\r\n       \r\n      }\r\n    };\r\n  \r\n    \r\n    const getImage = () => {\r\n \r\n      props.handleImage(fileReader.result);\r\n    };\r\n  \r\n    \r\n    fileReader.addEventListener(\"load\", getImage);\r\n  \r\n    return (\r\n      <div>\r\n        <label>\r\n          Selecciona una imagen por favor:\r\n         \r\n          <input\r\n            ref={fileElement}\r\n            type=\"file\"\r\n            name=\"image-reader\"\r\n            onChange={handleFile}\r\n          />\r\n        </label>\r\n  \r\n        <p>El tamaño de la imagen es: {fileSize} bytes.</p>\r\n        <p>El tipo de la imagen es: {fileType}.</p>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ImageReader;\r\n  "],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AACzC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,aAAa,CAAC;EAEvD,MAAMO,WAAW,GAAGR,MAAM,EAAE;EAE5B,MAAMS,UAAU,GAAG,IAAIC,UAAU,EAAE;EAGnC,MAAMC,UAAU,GAAG,MAAM;IAEvB,MAAMC,YAAY,GAAGJ,WAAW,CAACK,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC;IAGjD,IAAIF,YAAY,EAAE;MAEhBG,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;MAGzBP,WAAW,CAACO,YAAY,CAACK,IAAI,CAAC;MAC9BV,WAAW,CAACK,YAAY,CAACM,IAAI,CAAC;MAG9BT,UAAU,CAACU,aAAa,CAACP,YAAY,CAAC;IAExC;EACF,CAAC;EAGD,MAAMQ,QAAQ,GAAG,MAAM;IAErBjB,KAAK,CAACkB,WAAW,CAACZ,UAAU,CAACa,MAAM,CAAC;EACtC,CAAC;EAGDb,UAAU,CAACc,gBAAgB,CAAC,MAAM,EAAEH,QAAQ,CAAC;EAE7C,oBACE;IAAA,wBACE;MAAA,4DAGE;QACE,GAAG,EAAEZ,WAAY;QACjB,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,cAAc;QACnB,QAAQ,EAAEG;MAAW;QAAA;QAAA;QAAA;MAAA,QACrB;IAAA;MAAA;MAAA;MAAA;IAAA,QACI,eAER;MAAA,6CAA+BP,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAY,eACnD;MAAA,wCAA6BE,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACvC;AAEV,CAAC;AAAC,GAtDEJ,WAAW;AAAA,KAAXA,WAAW;AAwDf,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}